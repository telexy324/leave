// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  phone         String?        @unique
  password      String
  name          String
  role          Role          @default(USER)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  leaveRequests Leave[]       @relation("UserLeaves")
  approvedLeaves Leave[]      @relation("ApprovedBy")
  leaveBalance  LeaveBalance[]
}

model Leave {
  id          String      @id @default(uuid())
  userId      String
  type        LeaveType
  startDate   DateTime
  endDate     DateTime
  reason      String
  status      LeaveStatus @default(PENDING)
  proof       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation("UserLeaves", fields: [userId], references: [id])
  approvedBy  User?       @relation("ApprovedBy", fields: [approverId], references: [id])
  approverId  String?
  comment     String?
}

model LeaveBalance {
  id        String    @id @default(uuid())
  userId    String
  type      LeaveType
  total     Float
  used      Float     @default(0)
  year      Int
  user      User      @relation(fields: [userId], references: [id])

  @@unique([userId, type, year])
}

enum Role {
  ADMIN
  USER
}

enum LeaveType {
  ANNUAL
  SICK
  PERSONAL
  OTHER
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}
